import React,{useEffect} from 'react';
import { Formik, Form, Field, ErrorMessage } from 'formik';
import * as Yup from 'yup';
import './login.css';

import api from "@/services/api";

interface LoginFormValues {
  user_name: string;
  password: string;
}

const initialValues: LoginFormValues = {
  user_name: '',
  password: ''
};

const validationSchema = Yup.object({
  user_name: Yup.string().required('Required'),
  password: Yup.string().min(6, 'Minimum 6 characters').required('Required')
});

const Login: React.FC = () => {

  const [ postLogin, { data: loginData, error: loginError, isLoading: loginLoading} ] = api.useLoginMutation();

  useEffect(()=>{
    console.log("data",loginData)

  },[loginData]);

  const onSubmit = async(values: any) => {
    console.log('Form data', values);
    await postLogin(values)
  };


  return (
    <div className="login-form">
      <h2>Login</h2>
      <p className="error"> { loginError ? 'Invalid credential. Try again!' : ''}</p>
      <Formik
        initialValues={initialValues}
        validationSchema={validationSchema}
        onSubmit={onSubmit}
      >
        <Form>
          <div className="form-control">
            <label htmlFor="email">User Name:</label>
            <Field type="text" id="user_name" name="user_name" />
            <ErrorMessage name="user_name" component="div" className="error" />
          </div>

          <div className="form-control">
            <label htmlFor="password">Password:</label>
            <Field type="password" id="password" name="password" />
            <ErrorMessage name="password" component="div" className="error" />
          </div>

          <button type="submit"> { loginLoading ? 'Loading...':'Login'}</button>
        </Form>
      </Formik>
    </div>
  );
};

export default Login;
